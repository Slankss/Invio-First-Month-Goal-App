// Generated by Dagger (https://dagger.dev).
package com.okankkl.movieapp.ui.splash_screen;

import com.okankkl.movieapp.data.repository.MovieRepositoryImp;
import com.okankkl.movieapp.domain.use_case.GetMoviesUsecase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SplashFragmentViewModel_Factory implements Factory<SplashFragmentViewModel> {
  private final Provider<GetMoviesUsecase> getMoviesUsecaseProvider;

  private final Provider<MovieRepositoryImp> movieRepositoryProvider;

  public SplashFragmentViewModel_Factory(Provider<GetMoviesUsecase> getMoviesUsecaseProvider,
      Provider<MovieRepositoryImp> movieRepositoryProvider) {
    this.getMoviesUsecaseProvider = getMoviesUsecaseProvider;
    this.movieRepositoryProvider = movieRepositoryProvider;
  }

  @Override
  public SplashFragmentViewModel get() {
    return newInstance(getMoviesUsecaseProvider.get(), movieRepositoryProvider.get());
  }

  public static SplashFragmentViewModel_Factory create(
      Provider<GetMoviesUsecase> getMoviesUsecaseProvider,
      Provider<MovieRepositoryImp> movieRepositoryProvider) {
    return new SplashFragmentViewModel_Factory(getMoviesUsecaseProvider, movieRepositoryProvider);
  }

  public static SplashFragmentViewModel newInstance(GetMoviesUsecase getMoviesUsecase,
      MovieRepositoryImp movieRepository) {
    return new SplashFragmentViewModel(getMoviesUsecase, movieRepository);
  }
}
