// Generated by Dagger (https://dagger.dev).
package com.okankkl.movieapp.domain.use_case;

import com.okankkl.movieapp.domain.repository.MovieRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetMoviesUsecase_Factory implements Factory<GetMoviesUsecase> {
  private final Provider<MovieRepository> moviesRepositoryProvider;

  public GetMoviesUsecase_Factory(Provider<MovieRepository> moviesRepositoryProvider) {
    this.moviesRepositoryProvider = moviesRepositoryProvider;
  }

  @Override
  public GetMoviesUsecase get() {
    return newInstance(moviesRepositoryProvider.get());
  }

  public static GetMoviesUsecase_Factory create(
      Provider<MovieRepository> moviesRepositoryProvider) {
    return new GetMoviesUsecase_Factory(moviesRepositoryProvider);
  }

  public static GetMoviesUsecase newInstance(MovieRepository moviesRepository) {
    return new GetMoviesUsecase(moviesRepository);
  }
}
