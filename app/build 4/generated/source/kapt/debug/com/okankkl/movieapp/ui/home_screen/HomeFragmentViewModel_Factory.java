// Generated by Dagger (https://dagger.dev).
package com.okankkl.movieapp.ui.home_screen;

import com.okankkl.movieapp.domain.repository.MovieRepository;
import com.okankkl.movieapp.domain.repository.PreferenceRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class HomeFragmentViewModel_Factory implements Factory<HomeFragmentViewModel> {
  private final Provider<MovieRepository> movieRepositoryProvider;

  private final Provider<PreferenceRepository> preferenceRepositoryProvider;

  public HomeFragmentViewModel_Factory(Provider<MovieRepository> movieRepositoryProvider,
      Provider<PreferenceRepository> preferenceRepositoryProvider) {
    this.movieRepositoryProvider = movieRepositoryProvider;
    this.preferenceRepositoryProvider = preferenceRepositoryProvider;
  }

  @Override
  public HomeFragmentViewModel get() {
    return newInstance(movieRepositoryProvider.get(), preferenceRepositoryProvider.get());
  }

  public static HomeFragmentViewModel_Factory create(
      Provider<MovieRepository> movieRepositoryProvider,
      Provider<PreferenceRepository> preferenceRepositoryProvider) {
    return new HomeFragmentViewModel_Factory(movieRepositoryProvider, preferenceRepositoryProvider);
  }

  public static HomeFragmentViewModel newInstance(MovieRepository movieRepository,
      PreferenceRepository preferenceRepository) {
    return new HomeFragmentViewModel(movieRepository, preferenceRepository);
  }
}
