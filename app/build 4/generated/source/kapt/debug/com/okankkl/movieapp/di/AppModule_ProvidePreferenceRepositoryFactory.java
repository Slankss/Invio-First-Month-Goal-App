// Generated by Dagger (https://dagger.dev).
package com.okankkl.movieapp.di;

import com.okankkl.movieapp.data.local.dataStore.AppPreference;
import com.okankkl.movieapp.domain.repository.PreferenceRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvidePreferenceRepositoryFactory implements Factory<PreferenceRepository> {
  private final AppModule module;

  private final Provider<AppPreference> appPreferenceProvider;

  public AppModule_ProvidePreferenceRepositoryFactory(AppModule module,
      Provider<AppPreference> appPreferenceProvider) {
    this.module = module;
    this.appPreferenceProvider = appPreferenceProvider;
  }

  @Override
  public PreferenceRepository get() {
    return providePreferenceRepository(module, appPreferenceProvider.get());
  }

  public static AppModule_ProvidePreferenceRepositoryFactory create(AppModule module,
      Provider<AppPreference> appPreferenceProvider) {
    return new AppModule_ProvidePreferenceRepositoryFactory(module, appPreferenceProvider);
  }

  public static PreferenceRepository providePreferenceRepository(AppModule instance,
      AppPreference appPreference) {
    return Preconditions.checkNotNullFromProvides(instance.providePreferenceRepository(appPreference));
  }
}
